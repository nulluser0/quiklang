Hello, world!
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'm' TRUE
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'd' TRUE
Identifier/Keyword - Pointer: '\r' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
]
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'm' TRUE
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
]
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'y' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: '\r' FALSE
Pointer: 's' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
]
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: '.' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
]
Draining char...
Pointer: '.' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
]
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: '(' FALSE
Pointer: 'p' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
]
Draining char...
Pointer: '(' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
]
String Literal - Pointer: 'H' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: ',' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'W' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'd' FALSE
String Literal - Pointer: '!' FALSE
String Literal - Pointer: '"' TRUE
Draining char...
Pointer: '"' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
]
Draining char...
Pointer: ';' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
]
Draining char...
Pointer: '/' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
]
Draining char...
Pointer: '/' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
]
Identifier/Keyword - Pointer: 'x' TRUE
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'm' TRUE
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'x' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
]
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: '\r' FALSE
Pointer: 'u' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
]
Identifier/Keyword - Pointer: 'f' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'f' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: '(' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
]
Draining char...
Pointer: '(' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ':' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
]
Draining char...
Pointer: ':' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'g' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: ')' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
]
Draining char...
Pointer: ')' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: '>' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'g' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
]
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'f' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
]
Draining char...
Pointer: '=' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
]
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: '}' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
]
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'l' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
]
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: '(' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
]
Draining char...
Pointer: '(' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
]
Draining char...
Pointer: ')' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: '}' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: '}' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
]
Draining char...
Pointer: '/' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
]
Draining char...
Pointer: '/' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 'y' TRUE
Identifier/Keyword - Pointer: '\r' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'y' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'k' TRUE
Identifier/Keyword - Pointer: '1' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
]
Numeric Literal - Pointer: '1' TRUE
Numeric Literal - Pointer: '(' FALSE
Pointer: '1' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
]
Draining char...
Pointer: '(' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
]
Draining char...
Pointer: ')' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: '>' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
]
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'g' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 't' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
]
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: '(' FALSE
Pointer: 's' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
]
Draining char...
Pointer: '(' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
]
Numeric Literal - Pointer: '2' TRUE
Numeric Literal - Pointer: '0' TRUE
Numeric Literal - Pointer: '0' TRUE
Numeric Literal - Pointer: '0' TRUE
Numeric Literal - Pointer: ')' FALSE
Pointer: '2' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
]
Draining char...
Pointer: ')' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
]
Draining char...
Pointer: '.' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'w' TRUE
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: '\r' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
]
Draining char...
Pointer: '\r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
]
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
]
Identifier/Keyword - Pointer: 'O' TRUE
Identifier/Keyword - Pointer: 'K' TRUE
Identifier/Keyword - Pointer: '1' FALSE
Pointer: 'O' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
]
Numeric Literal - Pointer: '1' TRUE
Numeric Literal - Pointer: '"' FALSE
Pointer: '1' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
]
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: '}' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'y' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 'c' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'f' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'k' FALSE
String Literal - Pointer: '2' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '{' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 'p' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: '1' FALSE
String Literal - Pointer: '0' FALSE
String Literal - Pointer: '0' FALSE
String Literal - Pointer: '0' FALSE
String Literal - Pointer: ')' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'w' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: ';' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'u' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '"' TRUE
Draining char...
Pointer: '"' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
]
Identifier/Keyword - Pointer: 'K' TRUE
Identifier/Keyword - Pointer: '2' FALSE
Pointer: 'K' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
]
Numeric Literal - Pointer: '2' TRUE
Numeric Literal - Pointer: '"' FALSE
Pointer: '2' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
]
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: '}' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'm' FALSE
String Literal - Pointer: 'u' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'v' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'u' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: ':' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '[' FALSE
String Literal - Pointer: 'S' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 'g' FALSE
String Literal - Pointer: ',' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'S' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 'g' FALSE
String Literal - Pointer: ']' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '=' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'y' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 'c' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'p' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'w' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: '!' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'k' FALSE
String Literal - Pointer: '1' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ',' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'k' FALSE
String Literal - Pointer: '2' FALSE
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ';' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 'p' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: '"' TRUE
Draining char...
Pointer: '"' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
]
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'u' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
]
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'd' TRUE
Identifier/Keyword - Pointer: ',' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
]
Draining char...
Pointer: ',' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
]
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'u' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
]
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 't' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
]
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'f' TRUE
Identifier/Keyword - Pointer: 'f' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 't' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: '!' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
]
Draining char...
Pointer: '!' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
]
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ';' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 'p' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: '"' TRUE
Draining char...
Pointer: '"' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'w' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
]
Identifier/Keyword - Pointer: 'f' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'f' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
]
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ',' FALSE
Pointer: 'u' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
]
Draining char...
Pointer: ',' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'd' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
]
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'r' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'm' TRUE
Identifier/Keyword - Pointer: '.' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
]
Draining char...
Pointer: '.' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
]
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ';' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'v' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'u' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '=' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'v' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'u' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: '>' FALSE
String Literal - Pointer: ' ' FALSE
String Literal - Pointer: 'a' FALSE
String Literal - Pointer: 's' FALSE
String Literal - Pointer: 'y' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 'c' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 'c' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'l' FALSE
String Literal - Pointer: 'e' FALSE
String Literal - Pointer: 'c' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: ')' FALSE
String Literal - Pointer: ';' FALSE
String Literal - Pointer: '\r' FALSE
String Literal - Pointer: '\n' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'o' FALSE
String Literal - Pointer: '.' FALSE
String Literal - Pointer: 'p' FALSE
String Literal - Pointer: 'r' FALSE
String Literal - Pointer: 'i' FALSE
String Literal - Pointer: 'n' FALSE
String Literal - Pointer: 't' FALSE
String Literal - Pointer: '(' FALSE
String Literal - Pointer: '"' TRUE
Draining char...
Pointer: '"' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
]
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'e' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
]
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'p' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
]
Identifier/Keyword - Pointer: 'a' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'a' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
]
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'i' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
]
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'u' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'u' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
]
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'n' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
]
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'y' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 's' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
]
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'l' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: 'c' TRUE
Identifier/Keyword - Pointer: 't' TRUE
Identifier/Keyword - Pointer: 'o' TRUE
Identifier/Keyword - Pointer: 'r' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'o' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
]
Identifier/Keyword - Pointer: 's' TRUE
Identifier/Keyword - Pointer: 'i' TRUE
Identifier/Keyword - Pointer: 'n' TRUE
Identifier/Keyword - Pointer: 'g' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 's' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
    Identifier(
        "sing",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
    Identifier(
        "sing",
    ),
]
Identifier/Keyword - Pointer: 'h' TRUE
Identifier/Keyword - Pointer: 'e' TRUE
Identifier/Keyword - Pointer: ' ' FALSE
Pointer: 'h' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
    Identifier(
        "sing",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: ' ' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
    Identifier(
        "sing",
    ),
    Identifier(
        "he",
    ),
]
Draining char...
Pointer: '>' Producing: [
    Keyword(
        Import,
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "est",
    ),
    Identifier(
        "ello",
    ),
    Identifier(
        "orld",
    ),
    Keyword(
        Import,
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "io",
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "print",
    ),
    Symbol(
        LeftParen,
    ),
    StringLiteral(
        "Hello, World!",
    ),
    Symbol(
        Semicolon,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "xample",
    ),
    Identifier(
        "actorial",
    ),
    Identifier(
        "unction",
    ),
    Keyword(
        Fn,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        Colon,
    ),
    Identifier(
        "nteger",
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "nteger",
    ),
    Keyword(
        If,
    ),
    Operator(
        Assign,
    ),
    Keyword(
        Return,
    ),
    Symbol(
        RightBrace,
    ),
    Identifier(
        "lse",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "actorial",
    ),
    Symbol(
        LeftParen,
    ),
    Identifier(
        "n",
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        RightBrace,
    ),
    Symbol(
        RightBrace,
    ),
    Operator(
        Divide,
    ),
    Operator(
        Divide,
    ),
    Identifier(
        "oncurrency",
    ),
    Identifier(
        "async",
    ),
    Identifier(
        "n",
    ),
    Identifier(
        "ask",
    ),
    IntegerLiteral(
        1,
    ),
    Symbol(
        LeftParen,
    ),
    Symbol(
        RightParen,
    ),
    Operator(
        Pipe,
    ),
    Identifier(
        "tring",
    ),
    Identifier(
        "sleep",
    ),
    Symbol(
        LeftParen,
    ),
    IntegerLiteral(
        2000,
    ),
    Symbol(
        RightParen,
    ),
    Symbol(
        Dot,
    ),
    Identifier(
        "await",
    ),
    Keyword(
        Return,
    ),
    Identifier(
        "OK",
    ),
    IntegerLiteral(
        1,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nasync fn task2() {\r\n    sleep(1000).await;\r\n    return ",
    ),
    Identifier(
        "K",
    ),
    IntegerLiteral(
        2,
    ),
    StringLiteral(
        "\r\n}\r\n\r\nlet mut values: [String, String] = async.spawn!(task1(), task2);\r\nio.print(",
    ),
    Identifier(
        "hese",
    ),
    Identifier(
        "unctions",
    ),
    Identifier(
        "re",
    ),
    Identifier(
        "alled",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "ut",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "an",
    ),
    Identifier(
        "till",
    ),
    Identifier(
        "o",
    ),
    Identifier(
        "tuff",
    ),
    Identifier(
        "ere",
    ),
    Symbol(
        Bang,
    ),
    StringLiteral(
        ");\r\nio.print(",
    ),
    Identifier(
        "ow",
    ),
    Identifier(
        "ets",
    ),
    Identifier(
        "ollect",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "esults",
    ),
    Identifier(
        "f",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "unctions",
    ),
    Symbol(
        Comma,
    ),
    Identifier(
        "nd",
    ),
    Identifier(
        "rint",
    ),
    Identifier(
        "hem",
    ),
    Symbol(
        Dot,
    ),
    StringLiteral(
        ");\r\nvalues = values > async.collect();\r\nio.print(",
    ),
    Identifier(
        "e",
    ),
    Identifier(
        "ipe",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "alues",
    ),
    Identifier(
        "ith",
    ),
    Identifier(
        "utures",
    ),
    Identifier(
        "nto",
    ),
    Identifier(
        "he",
    ),
    Identifier(
        "sync",
    ),
    Identifier(
        "ollector",
    ),
    Identifier(
        "sing",
    ),
    Identifier(
        "he",
    ),
    Operator(
        Pipe,
    ),
]
Unrecognized character found in source: '\''
